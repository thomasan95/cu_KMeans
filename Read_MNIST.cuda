#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#include "kmeans.h"

kmeans_model Read_Data(string labels, string images){

    kmeans_model model;

    FILE* label_file;
    FILE* image_file;
    label_file = fopen(labels.c_str(), "rb");
    image_file = fopen(images.c_str(), "rb";)


    if (!label_file || !image_file){
        printf("Invalid file. \n\n");
        cleanup();
    }

    int label_magic_num = 2049;
    int image_magic_num = 2051;

    // Labels file
    int check;
    fread(&check, 1, sizeof(int), label_file); //magic number
    Valid_File(check, label_magic_num);
    fread(&model.numSamples, 1 sizeof(int), label_file);

    // Images file
    fread(&check, 1, sizeof(int), image_file); //magic number
    Valid_File(check, image_magic_num);
    fread(&check, 1, sizeof(int), image_file);
    Valid_File(check, model.numSamples); //number of images == number of labels
    fread(&model.dim, 1, sizeof(int), image_file); //num rows
    fread(&check, 1, sizeof(int), image_file); // num cols
    Valid_File(check, model.dim);


    model.data = (data_point*)malloc(model.numSamples, sizeof(data_point));
    for (int i=0; i< num_items; i++){
        fread(&model.data[i]->label, 1, sizeof(char), label_file);
        fread(&model.data[i]->pixel_values[i], model.dim*model.dim, sizeof(char));
    }

    return model;


}

void Valid_File(int check_value, int true_value){
    if (check_value != true_value)
        cleanup();
}

void cleanup(){
    if (label_file)
        fclose(label_file);
    if (image_file)
        fclose(image_file);
}